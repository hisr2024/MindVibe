name: Upload runtime diagnostics (debug)

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - fix/upload-artifacts

jobs:
  collect-and-upload:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Example build/test step (platform-specific)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p "${RUNNER_TEMP}/runtime-logs"
          echo "linux sample blocked log" > "${RUNNER_TEMP}/runtime-logs/blocked.jsonl"
      - name: Example build/test step (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path "$Env:RUNNER_TEMP\runtime-logs" -Force | Out-Null
          "windows sample blocked log" | Out-File -FilePath "$Env:RUNNER_TEMP\runtime-logs\blocked.jsonl" -Encoding utf8

      - name: Debug: show workspace & runner temp (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          echo "RUNNER_TEMP: $RUNNER_TEMP"
          ls -la "$GITHUB_WORKSPACE" || true
          ls -la "$RUNNER_TEMP" || true
      - name: Debug: show workspace & runner temp (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          Write-Host "GITHUB_WORKSPACE: $Env:GITHUB_WORKSPACE"
          Write-Host "RUNNER_TEMP: $Env:RUNNER_TEMP"
          Get-ChildItem -Path $Env:GITHUB_WORKSPACE -Force -ErrorAction SilentlyContinue | ForEach-Object { Write-Host $_.FullName }
          Get-ChildItem -Path $Env:RUNNER_TEMP -Force -ErrorAction SilentlyContinue | ForEach-Object { Write-Host $_.FullName }

      - name: Collect runtime logs (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          set -euxo pipefail
          mkdir -p "${RUNNER_TEMP}/runtime-logs"
          for path in \
            "$GITHUB_WORKSPACE/runtime-logs" \
            "$GITHUB_WORKSPACE/logs" \
            "$GITHUB_WORKSPACE/.tmp/runtime-logs" \
            "${RUNNER_TEMP}/runtime-logs" \
            "${GITHUB_WORKSPACE}/.github/workflows/runtime-logs"; do
            if [ -e "$path" ]; then
              echo "Found: $path"
              cp -R "$path" "${RUNNER_TEMP}/runtime-logs/" || true
            fi
          done
          find "${RUNNER_TEMP}/runtime-logs" -maxdepth 6 -type f -print || echo "No runtime logs found"

      - name: Collect runtime logs (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          $gw = $Env:GITHUB_WORKSPACE
          $rt = $Env:RUNNER_TEMP
          $target = Join-Path $rt "runtime-logs"
          New-Item -ItemType Directory -Path $target -Force | Out-Null
          $paths = @(
            Join-Path $gw "runtime-logs",
            Join-Path $gw "logs",
            Join-Path $gw ".tmp\runtime-logs",
            Join-Path $gw ".github\workflows\runtime-logs",
            Join-Path $rt "runtime-logs"
          )
          foreach ($p in $paths) {
            if (Test-Path $p) {
              Write-Host "Found: $p"
              Copy-Item -Path $p -Destination $target -Recurse -Force -ErrorAction SilentlyContinue
            } else {
              Write-Host "Not found: $p"
            }
          }
          Get-ChildItem -Path $target -Recurse -File -ErrorAction SilentlyContinue | ForEach-Object { Write-Host $_.FullName }

      - name: Upload runtime-logs artifact (warn if nothing found)
        uses: actions/upload-artifact@v4
        with:
          name: runtime-logs
          path: ${{ runner.temp }}/runtime-logs/**
          if-no-files-found: 'warn'
