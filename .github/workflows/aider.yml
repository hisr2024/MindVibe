name: Aider Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  aider-review:
    name: Run Aider Code Review
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-aider-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-aider-
            ${{ runner.os }}-pip-
      
      - name: Install Aider
        run: |
          python -m pip install --upgrade pip
          pip install git+https://github.com/paul-gauthier/aider.git
      
      - name: Run Aider code review
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          mkdir -p reports
          bash scripts/run-aider.sh || true
        continue-on-error: true
      
      - name: Upload Aider suggestions
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: aider-suggestions
          path: reports/aider-suggestions.txt
          retention-days: 30
      
      - name: Comment PR with suggestions (if available)
        if: always() && hashFiles('reports/aider-suggestions.txt') != ''
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const suggestionsPath = 'reports/aider-suggestions.txt';
            
            if (fs.existsSync(suggestionsPath)) {
              const suggestions = fs.readFileSync(suggestionsPath, 'utf8');
              
              if (suggestions.trim()) {
                const body = `## ðŸ¤– Aider Code Review\n\n${suggestions}\n\n---\n*Generated by Aider using the code-review prompt*`;
                
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: body
                });
              }
            }
